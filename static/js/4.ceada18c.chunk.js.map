{"version":3,"sources":["components/Profile/MyPost/MyPostForm.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItems/MessageItems.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["maxlength10","maxLengthCreator","MyPostReduxForm","reduxForm","form","props","onSubmit","handleSubmit","name","placeholder","type","component","Textarea","validate","required","namebutton","PostForm","formData","addMessage","post","module","exports","DialogItems","className","s","item","active","avatar","src","alt","to","id","MessageItems","message","Dialogs","dialogElements","dialogData","map","dialog","DialogItem","messageElements","messageData","messages","title","dialogs","dialogs__items","sendMessage","text","compose","connect","state","dialogPage","newmessageData","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"wHAAA,sDAKMA,EAAcC,YAAiB,IAiB/BC,EAAkBC,YAAU,CAAEC,KAAM,QAAlBD,EAfL,SAACE,GAEhB,OACI,0BAAMC,SAAUD,EAAME,cAClB,6BACI,kBAAC,IAAD,CAAOC,KAAM,OAAQC,YAAaJ,EAAMI,YAAaC,KAAM,OAAQC,UAAWC,IAC1EC,SAAU,CAACC,IAAUd,MAE7B,6BACI,gCAASK,EAAMU,iBAoBhBC,IAZE,SAACX,GAMd,OACI,kBAACH,EAAD,CAAiBI,SANJ,SAACW,GAGdZ,EAAMa,WAAWD,EAASE,OAGWJ,WAAYV,EAAMU,WAAYN,YAAaJ,EAAMI,gB,oBC9B9FW,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,eAAiB,gCAAgC,KAAO,sBAAsB,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,+FCchTC,EAXK,SAACjB,GACjB,OACI,wBAAIkB,UAAWC,IAAEC,KAAO,IAAMD,IAAEE,QAC5B,yBAAKH,UAAWC,IAAEG,OAAQC,IAAI,mGAAmGC,IAAI,KACtI,6BACC,kBAAC,IAAD,CAASC,GAAI,YAAczB,EAAM0B,IAAK1B,EAAMG,SCFzCwB,EALM,SAAC3B,GAClB,OACI,wBAAIkB,UAAU,WAAWlB,EAAM4B,U,SCmDxBC,EAhDC,SAAC7B,GAEb,IAAI8B,EAAiB9B,EAAM+B,WAAWC,KAAI,SAAAC,GAAM,OAAI,kBAACC,EAAD,CAAa/B,KAAM8B,EAAO9B,KAAMuB,GAAIO,EAAOP,QAE3FS,EAAkBnC,EAAMoC,YAAYJ,KAAI,SAAAK,GAAQ,OAAI,kBAAC,EAAD,CAAcT,QAASS,EAAST,aAWxF,OACI,6BACI,yBAAKV,UAAWC,IAAEmB,OACd,yBAAKpB,UAAWC,IAAEoB,SACd,wBAAIrB,UAAWC,IAAEqB,gBACZV,IAIT,wBAAIZ,UAAWC,IAAEkB,UAEZF,IAKT,yBAAKjB,UAAWC,IAAEsB,aACd,kBAAC,IAAD,CAAU5B,WA1BL,SAAC6B,GACd,OAAO1C,EAAMa,WAAW6B,IAyBkBhC,WAAY,cAAeN,YAAa,mG,uBClB3EuC,sBACXC,aAfoB,SAACC,GACrB,MAAO,CACHd,WAAYc,EAAMC,WAAWf,WAC7BK,YAAaS,EAAMC,WAAWV,YAC9BW,eAAgBF,EAAMC,WAAWC,mBAGd,SAACC,GACxB,MAAO,CACHnC,WAAY,SAAC6B,GACTM,EAASC,YAAwBP,SAMzCQ,IAFWP,CAGbd","file":"static/js/4.ceada18c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validator/validators';\r\nimport { Textarea } from '../../Common/FormsControl/FormsControl';\r\n\r\nconst maxlength10 = maxLengthCreator(10);\r\n\r\nconst MyPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'post'} placeholder={props.placeholder} type={'text'} component={Textarea}\r\n                    validate={[required, maxlength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>{props.namebutton}</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({ form: 'post' })(MyPostForm);\r\n\r\nconst PostForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        // console.log(formData)\r\n        // console.log('formData')\r\n        props.addMessage(formData.post)\r\n    }\r\n    return (\r\n        <MyPostReduxForm onSubmit={onSubmit} namebutton={props.namebutton} placeholder={props.placeholder} />\r\n    )\r\n}\r\n\r\n\r\nexport default PostForm","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Dialogs_title__F5iIv\",\"active\":\"Dialogs_active__14yks\",\"dialogs\":\"Dialogs_dialogs__2K83W\",\"dialogs__items\":\"Dialogs_dialogs__items__j4UK4\",\"item\":\"Dialogs_item__3KAZ5\",\"sendMessage\":\"Dialogs_sendMessage__1DyEo\",\"messages\":\"Dialogs_messages__UFqrv\",\"message\":\"Dialogs_message__1QCiQ\",\"avatar\":\"Dialogs_avatar__2OEp8\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItems = (props) => {\r\n    return (\r\n        <li className={s.item + ' ' + s.active}>\r\n            <img className={s.avatar} src=\"https://s4.cdn.teleprogramma.pro/wp-content/uploads/2020/01/e187d44f997b399185adaf352cc17b83.jpg\" alt=\"\" />\r\n           <div>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default DialogItems;","import React from 'react';\r\n\r\nconst MessageItems = (props) => {\r\n    return (\r\n        <li className=\"message\">{props.message}</li>\r\n    )\r\n}\r\nexport default MessageItems;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItems from './DialogItem/DialogItem';\r\nimport MessageItems from './MessageItems/MessageItems';\r\nimport PostForm from '../Profile/MyPost/MyPostForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = props.dialogData.map(dialog => <DialogItems name={dialog.name} id={dialog.id} />)\r\n\r\n    let messageElements = props.messageData.map(messages => <MessageItems message={messages.message} />)\r\n\r\n    let addMessage = (text) => {\r\n        return props.addMessage(text);\r\n    }\r\n\r\n    // let updateMessage = (e) => {\r\n    //     let text = e.target.value;\r\n    //     props.updateMessage(text);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.title}>\r\n                <div className={s.dialogs}>\r\n                    <ul className={s.dialogs__items}>\r\n                        {dialogElements}\r\n\r\n                    </ul>\r\n                </div>\r\n                <ul className={s.messages}>\r\n\r\n                    {messageElements}\r\n\r\n                </ul>\r\n\r\n            </div>\r\n            <div className={s.sendMessage}>\r\n                <PostForm addMessage={addMessage} namebutton={'Add message'} placeholder={'Введите ообщение'} />\r\n                {/* <div >\r\n                    <textarea onChange={updateMessage} value={props.newmessageData}></textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addMessage}>Add message</button>\r\n                </div> */}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Dialogs;","\r\nimport { addMessageActionCreator } from '../../redux/dialogReduser';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthContainer';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogData: state.dialogPage.dialogData,\r\n        messageData: state.dialogPage.messageData,\r\n        newmessageData: state.dialogPage.newmessageData\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (text) => {\r\n            dispatch(addMessageActionCreator(text));\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n// let AuthRedirect = withAuthRedirect(Dialogs)\r\n// const DialogContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirect);\r\n//  export default DialogContainer;"],"sourceRoot":""}