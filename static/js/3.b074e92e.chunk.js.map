{"version":3,"sources":["components/Profile/MyPost/MyPostForm.jsx","components/Profile/ProfileItem/ProfileItem.module.css","components/Profile/MyPost/MyPost.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileStatusWithHook.jsx","components/Profile/ProfileItem/ProfileItem.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["maxlength10","maxLengthCreator","MyPostReduxForm","reduxForm","form","props","onSubmit","handleSubmit","name","placeholder","type","component","Textarea","validate","required","namebutton","PostForm","formData","console","log","addMessage","post","module","exports","ProfileStatusWithHook","useState","editeMode","setEditeMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileItems","profile","src","photos","large","alt","className","s","description","fullName","Preloader","Post","item","avatar","message","count","MyPost","React","memo","postElements","posts","map","content","text","addPost","MyPostContainer","connect","state","profilePage","postData","newPostText","dispatch","addPostActionCreator","Profile","ProfileItem","store","ProfileContainer","userId","this","match","params","getProfile","getStatus","Component","compose","auth","isAuth","setUserProfile","withAuthRedirect","withRouter"],"mappings":"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","file":"static/js/3.b074e92e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validator/validators';\r\nimport { Textarea } from '../../Common/FormsControl/FormsControl';\r\n\r\nconst maxlength10 = maxLengthCreator(10);\r\n\r\nconst MyPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'post'} placeholder={props.placeholder} type={'text'} component={Textarea}\r\n                    validate={[required, maxlength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>{props.namebutton}</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({ form: 'post' })(MyPostForm);\r\n\r\nconst PostForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        console.log('formData')\r\n        props.addMessage(formData.post)\r\n    }\r\n    return (\r\n        <MyPostReduxForm onSubmit={onSubmit} namebutton={props.namebutton} placeholder={props.placeholder} />\r\n    )\r\n}\r\n\r\n\r\nexport default PostForm","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileItem_description__2rSH4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__1LQ4I\",\"content\":\"MyPost_content__3ZSGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Hshl\",\"avatar\":\"Post_avatar__27ZwP\",\"block\":\"Post_block___0v4o\"};","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editeMode, setEditeMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditeMode = () => {\r\n        setEditeMode(true)\r\n    }\r\n    let deActivateEditeMode = () => {\r\n        setEditeMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let onChangeStatus = (e) => {\r\n\r\n        setStatus(e.currentTarget.value)\r\n        // debugger\r\n\r\n    }\r\n\r\n    return <div>\r\n        {!editeMode && <div>\r\n            <span onDoubleClick={activateEditeMode}>{props.status || \"++++++++\"}</span>\r\n        </div>}\r\n        {editeMode &&\r\n            <div>\r\n                <input autoFocus={true} onChange={onChangeStatus}\r\n                    onBlur={deActivateEditeMode} value={status} />\r\n            </div>\r\n\r\n        }\r\n    </div>\r\n}\r\nexport default ProfileStatusWithHook","import React from 'react'\r\nimport s from './ProfileItem.module.css'\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHook from '../ProfileStatusWithHook';\r\n\r\nconst ProfileItems = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    // debugger\r\n    return (        \r\n        <div>\r\n            <img src={props.profile.photos.large} alt='sdv' />\r\n            <div className={s.description}>\r\n                {props.profile.fullName}\r\n                \r\n                {/* <ProfileStatus status = {props.status} updateStatus ={props.updateStatus}/> */}\r\n                <ProfileStatusWithHook status = {props.status} updateStatus ={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileItems;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n      <div className={s.item} >\r\n\r\n        <img className={s.avatar} src=\"https://s4.cdn.teleprogramma.pro/wp-content/uploads/2020/01/e187d44f997b399185adaf352cc17b83.jpg\" alt=\"\" />\r\n        <div>\r\n          {props.message}\r\n          <span>like {props.count}</span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport PostForm from './MyPostForm';\r\n\r\n\r\nconst MyPost = React.memo((props) => {\r\n  // debugger\r\n  console.log(\"RENDER\");\r\n  let addPost = (text) => {\r\n    props.addPost(text);\r\n  }\r\n\r\n  let postElements = props.posts.map(post => {\r\n    return <Post message={post.message} count={post.count} />\r\n  })\r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.item}> my post </div>\r\n      <PostForm addMessage={addPost} namebutton={'Add'} placeholder={'Начните ввод'} />\r\n\r\n      {postElements}\r\n\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport { addPostActionCreator, onChangePostActionCreator } from '../../../redux/profileReduser';\r\nimport MyPost from './MyPost';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n// const MyPostContainer = (props) => {\r\n//   // debugger;\r\n//   // console.log('ddd');\r\n//   // console.log(props.store.getState().profilePage.postData);\r\n//   return (\r\n//     <StoreContext.Consumer>{\r\n\r\n//       (store) => {\r\n//         let state = store.getState();\r\n//         let onChangePost = (text) => {\r\n//           store.dispatch(onChangePostActionCreator(text));\r\n//         }\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator());\r\n\r\n//         }\r\n//         return (\r\n//           <MyPost addPost={addPost}\r\n//             updatePost={onChangePost}\r\n//             posts={state.profilePage.postData}\r\n//             newPostText={state.profilePage.newPostText} />\r\n//         )\r\n//       }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// }\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      dispatch(addPostActionCreator(text));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","import React from 'react';\r\nimport ProfileItems from './ProfileItem/ProfileItem';\r\nimport MyPostContainer from './MyPost/MyPostContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileItems profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostContainer store={props.store} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile, getProfile, getStatus, updateStatus } from '../../redux/profileReduser';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthContainer';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {   \r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} status={this.props.status} />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setUserProfile, getProfile, getStatus, updateStatus }),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n// const MyProfileContainer = withRouter(ProfileContainer);\r\n\r\n// let AuthRedirect = withAuthRedirect(MyProfileContainer)\r\n\r\n// export default connect(mapStateToProps, {setUserProfile, getProfile}) (AuthRedirect);\r\n\r\n"],"sourceRoot":""}