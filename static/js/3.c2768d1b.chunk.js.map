{"version":3,"sources":["components/Profile/MyPost/MyPostForm.jsx","components/Profile/ProfileItem/ProfileItem.module.css","components/Profile/ProfileItem/ProfileDataForm.module.css","components/Profile/MyPost/MyPost.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileStatusWithHook.jsx","components/Profile/ProfileItem/ProfileDataForm.js","components/Profile/ProfileItem/ProfileItem.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["maxlength10","maxLengthCreator","MyPostReduxForm","reduxForm","form","props","onSubmit","handleSubmit","name","placeholder","type","component","Textarea","validate","required","namebutton","PostForm","formData","addMessage","post","module","exports","ProfileStatusWithHook","useState","editeMode","setEditeMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileDataFormRedux","profile","className","s","form__button","error","errorsome","form__item","form__input","Field","Input","Object","keys","contacts","map","key","form__contact","ProfileData","isOwner","goToEditForm","description","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contacts","ProfileItems","Preloader","mainPhoto","src","photos","large","userPhoto","alt","input_file","setPhoto","target","files","title","saveProfile","then","initialValues","Post","console","log","item","avatar","message","count","MyPost","React","memo","postElements","posts","id","content","text","addPost","MyPostContainer","connect","state","profilePage","postData","newPostText","dispatch","addPostActionCreator","Profile","ProfileItem","store","ProfileContainer","userId","this","match","params","getProfile","getStatus","refreshProfile","prevProps","Component","compose","auth","isAuth","setUserProfile","withAuthRedirect","withRouter"],"mappings":"wHAAA,sDAKMA,EAAcC,YAAiB,IAiB/BC,EAAkBC,YAAU,CAAEC,KAAM,QAAlBD,EAfL,SAACE,GAEhB,OACI,0BAAMC,SAAUD,EAAME,cAClB,6BACI,kBAAC,IAAD,CAAOC,KAAM,OAAQC,YAAaJ,EAAMI,YAAaC,KAAM,OAAQC,UAAWC,IAC1EC,SAAU,CAACC,IAAUd,MAE7B,6BACI,gCAASK,EAAMU,iBAoBhBC,IAZE,SAACX,GAMd,OACI,kBAACH,EAAD,CAAiBI,SANJ,SAACW,GAGdZ,EAAMa,WAAWD,EAASE,OAGWJ,WAAYV,EAAMU,WAAYN,YAAaJ,EAAMI,gB,oBC9B9FW,EAAOC,QAAU,CAAC,YAAc,iCAAiC,UAAY,+BAA+B,QAAU,6BAA6B,WAAa,gCAAgC,KAAO,0BAA0B,OAAS,4BAA4B,SAAW,8BAA8B,aAAe,kCAAkC,MAAQ,6B,oBCAxWD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,WAAa,oCAAoC,YAAc,qCAAqC,cAAgB,uCAAuC,aAAe,sCAAsC,UAAY,qC,oBCAnRD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,0B,oBCAxDD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,MAAQ,sB,8HCsCnEC,EApCe,SAACjB,GAAW,IAAD,EAELkB,oBAAS,GAFJ,mBAEhCC,EAFgC,KAErBC,EAFqB,OAGXF,mBAASlB,EAAMqB,QAHJ,mBAGhCA,EAHgC,KAGxBC,EAHwB,KAKrCC,qBAAU,WACND,EAAUtB,EAAMqB,UACjB,CAACrB,EAAMqB,SAgBV,OAAO,8BACDF,GAAa,6BACX,0BAAMK,cAhBU,WACpBJ,GAAa,KAegCpB,EAAMqB,QAAU,aAE5DF,GACG,6BACI,2BAAOM,WAAW,EAAMC,SAbf,SAACC,GAElBL,EAAUK,EAAEC,cAAcC,QAYdC,OAlBU,WACtBV,GAAa,GACbpB,EAAM+B,aAAaV,IAgBsBQ,MAAOR,O,qECuBzCW,EAFclC,YAAU,CAAEC,KAAM,WAAlBD,EAjDL,SAAC,GAA0B,IAAzBmC,EAAwB,EAAxBA,QAAajC,EAAW,2BAC9C,OAAO,0BAAMkC,UAAWC,IAAEpC,KAAME,SAAUD,EAAME,cACzC,6BAAK,4BAAQgC,UAAWC,IAAEC,cAArB,SACPpC,EAAMqC,OACC,yBAAKH,UAAWC,IAAEG,WACbtC,EAAMqC,OAGnB,yBAAKH,UAAWC,IAAEI,YACd,wCACA,yBAAKL,UAAWC,IAAEK,aACd,kBAACC,EAAA,EAAD,CAAOtC,KAAK,WAAWC,YAAa,WAAYE,UAAWoC,IAAOrC,KAAK,WAI/E,yBAAK6B,UAAWC,IAAEI,YACd,wCACA,yBAAKL,UAAWC,IAAEK,aACd,kBAACC,EAAA,EAAD,CAAOtC,KAAK,UAAUC,YAAa,UAAWE,UAAWC,IAAUF,KAAK,eAGhF,yBAAK6B,UAAWC,IAAEI,YACd,8CACA,yBAAKL,UAAWC,IAAEK,aACd,kBAACC,EAAA,EAAD,CAAOtC,KAAK,iBAAiBG,UAAWoC,IAAOrC,KAAK,eAG5D,yBAAK6B,UAAWC,IAAEI,YACd,wDACA,yBAAKL,UAAWC,IAAEK,aACd,kBAACC,EAAA,EAAD,CAAOtC,KAAK,4BAA4BC,YAAa,4BAA6BE,UAAWC,IAAUF,KAAK,eAGpH,6BACI,wCADJ,IACsBsC,OAAOC,KAAKX,EAAQY,UAAUC,KAAI,SAAAC,GAChD,OAAO,yBAAKA,IAAKA,EAAKb,UAAWC,IAAEI,YAAcJ,IAAEa,eAAe,2BAAID,EAAJ,MAC9D,yBAAKb,UAAWC,IAAEK,aACd,kBAACC,EAAA,EAAD,CAAOtC,KAAM,YAAc4C,EAAK3C,YAAa2C,EAAKzC,UAAWoC,IAAOrC,KAAK,mBCQ3F4C,EAAc,SAAC,GAAwC,IAAtChB,EAAqC,EAArCA,QAASiB,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACrC,OAAO,yBAAKjB,UAAWC,IAAEiB,aACpBF,GAAW,6BAAK,4BAAQG,QAASF,GAAjB,SACjB,yBAAKjB,UAAWC,IAAEhC,MAAO8B,EAAQqB,UACjC,6BACI,wCADJ,IACsBrB,EAAQsB,SAE9B,6BACI,8CADJ,OAC+BtB,EAAQuB,eAAiB,MAAQ,MAEhE,6BACI,wDADJ,KACuCvB,EAAQwB,2BAE/C,6BACI,wCADJ,IACsBd,OAAOC,KAAKX,EAAQY,UAAUC,KAAI,SAAAC,GAChD,OAAO,kBAAC,EAAD,CAAUA,IAAKA,EAAKW,aAAcX,EAAKY,aAAc1B,EAAQY,SAASE,WAMvFa,EAAW,SAAC,GAAoC,IAAlCF,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC9B,OAAO,yBAAKzB,UAAWC,IAAEU,UACrB,2BAAIa,GADD,MACsBC,IAIlBE,EArEM,SAAC7D,GAAW,IAAD,EACIkB,oBAAS,GADb,mBACvBC,EADuB,KACZC,EADY,KAG5B,IAAKpB,EAAMiC,QACP,OAAO,kBAAC6B,EAAA,EAAD,MAcX,OACI,yBAAK5B,UAAWC,IAAEF,SACd,yBAAKC,UAAWC,IAAE4B,UAAWC,IAAKhE,EAAMiC,QAAQgC,OAAOC,OAASC,IAAWC,IAAI,cAE9EpE,EAAMkD,SACH,yBAAKhB,UAAW,kBACZ,4BAAQA,UAAWC,IAAEkC,YAArB,aACI,2BAAOhE,KAAM,OAAQqB,SAnBrB,SAACC,GACjB3B,EAAMsE,SAAS3C,EAAE4C,OAAOC,MAAM,SAuB1B,yBAAKtC,UAAWC,IAAEsC,OAAlB,UACA,yBAAKvC,UAAWC,IAAEd,QACd,kBAAC,EAAD,CAAuBA,OAAQrB,EAAMqB,OAAQU,aAAc/B,EAAM+B,gBAEpEZ,EACK,kBAAC,EAAD,CAAsBlB,SAzBrB,SAACW,GACZZ,EAAM0E,YAAY9D,GAAU+D,MACxB,WACIvD,GAAa,OAsB+BwD,cAAe5E,EAAMiC,QAASA,QAASjC,EAAMiC,UACvF,kBAAC,EAAD,CAAakB,aAAc,kBAAM/B,GAAa,IAAO8B,QAASlD,EAAMkD,QAASjB,QAASjC,EAAMiC,Y,4CChB/F4C,EAvBF,SAAC7E,GACZ,OAAKA,EAAMiC,SAGX6C,QAAQC,IAAI,UACZD,QAAQC,IAAI/E,EAAMiC,QAAQgC,QAGtB,yBAAK/B,UAAWC,IAAE6C,MAEhB,yBAAK9C,UAAWC,IAAE8C,OAAQjB,IAAmC,OAA9BhE,EAAMiC,QAAQgC,OAAOC,MAAgBlE,EAAMiC,QAAQgC,OAAOC,MAAOC,IAAYC,IAAI,KAChH,6BACGpE,EAAMkF,QACP,sCAAYlF,EAAMmF,UAXjB,kBAACrB,EAAA,EAAD,O,SCmBIsB,EApBAC,IAAMC,MAAK,SAACtF,GAEzB,IAIIuF,EAAevF,EAAMwF,MAAM1C,KAAI,SAAAhC,GACjC,OAAO,kBAAC,EAAD,CAAMiC,IAAKjC,EAAK2E,GAAIxD,QAASjC,EAAMiC,QAASiD,QAASpE,EAAKoE,QAASC,MAAOrE,EAAKqE,WAExF,OACE,yBAAKjD,UAAWC,IAAEuD,SAChB,yBAAKxD,UAAWC,IAAE6C,MAAlB,cACA,kBAAC,IAAD,CAAUnE,WAVA,SAAC8E,GACb3F,EAAM4F,QAAQD,IASmBjF,WAAY,MAAON,YAAa,wEAE9DmF,M,QCIQM,EAFSC,aAhBA,SAACC,GACvB,MAAO,CACLP,MAAOO,EAAMC,YAAYC,SACzBC,YAAaH,EAAMC,YAAYE,YAC/BjE,QAAS8D,EAAMC,YAAY/D,YAIJ,SAACkE,GAC1B,MAAO,CACLP,QAAS,SAACD,GACRQ,EAASC,YAAqBT,QAKZG,CAA6CV,GCPtDiB,EAXC,SAACrG,GAEf,OACE,6BACE,kBAACsG,EAAD,CAAc5B,YAAa1E,EAAM0E,YAAaxB,QAASlD,EAAMkD,QAASjB,QAASjC,EAAMiC,QAASZ,OAAQrB,EAAMqB,OAChGU,aAAc/B,EAAM+B,aAAcuC,SAAYtE,EAAMsE,WAChE,kBAAC,EAAD,CAAiBiC,MAAOvG,EAAMuG,U,uBCF9BC,E,+KAEE,IAAIC,EAASC,KAAK1G,MAAM2G,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAK1G,MAAMyG,QAExBC,KAAK1G,MAAM6G,WAAWJ,GACtBC,KAAK1G,MAAM8G,UAAUL,K,0CAGrBC,KAAKK,mB,yCAEUC,GACXN,KAAK1G,MAAM2G,MAAMC,OAAOH,SAAWO,EAAUL,MAAMC,OAAOH,QAC1DC,KAAKK,mB,+BAKT,OACI,kBAAC,EAAD,iBAAaL,KAAK1G,MAAlB,CACQqB,OAAQqF,KAAK1G,MAAMqB,OACnB6B,SAAawD,KAAK1G,MAAM2G,MAAMC,OAAOH,OACrCnC,SAAYoC,KAAK1G,MAAMsE,SACvBI,YAAegC,KAAK1G,MAAM0E,mB,GAxBfW,IAAM4B,WAoCtBC,sBACXpB,aARkB,SAACC,GAAD,MAAY,CAC9B9D,QAAS8D,EAAMC,YAAY/D,QAC3BZ,OAAQ0E,EAAMC,YAAY3E,OAC1BoF,OAAQV,EAAMoB,KAAKV,OACnBW,OAAQrB,EAAMoB,KAAKC,UAIM,CAAEC,mBAAgBR,eAAYC,cAAW/E,iBAAcuC,aAAUI,kBAC1F4C,IACAC,IAHWL,CAIbV","file":"static/js/3.c2768d1b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validator/validators';\r\nimport { Textarea } from '../../Common/FormsControl/FormsControl';\r\n\r\nconst maxlength10 = maxLengthCreator(10);\r\n\r\nconst MyPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'post'} placeholder={props.placeholder} type={'text'} component={Textarea}\r\n                    validate={[required, maxlength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>{props.namebutton}</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({ form: 'post' })(MyPostForm);\r\n\r\nconst PostForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        // console.log(formData)\r\n        // console.log('formData')\r\n        props.addMessage(formData.post)\r\n    }\r\n    return (\r\n        <MyPostReduxForm onSubmit={onSubmit} namebutton={props.namebutton} placeholder={props.placeholder} />\r\n    )\r\n}\r\n\r\n\r\nexport default PostForm","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileItem_description__2rSH4\",\"mainPhoto\":\"ProfileItem_mainPhoto__2g3Fw\",\"profile\":\"ProfileItem_profile__3u_AK\",\"input_file\":\"ProfileItem_input_file__31q7E\",\"name\":\"ProfileItem_name__2mrw3\",\"status\":\"ProfileItem_status__1pCea\",\"contacts\":\"ProfileItem_contacts__mMzMG\",\"button__file\":\"ProfileItem_button__file__1GT1c\",\"title\":\"ProfileItem_title__3YTYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__1aDbJ\",\"form__item\":\"ProfileDataForm_form__item__25To_\",\"form__input\":\"ProfileDataForm_form__input__vZX6c\",\"form__contact\":\"ProfileDataForm_form__contact__93jln\",\"form__button\":\"ProfileDataForm_form__button__1N8Du\",\"errorsome\":\"ProfileDataForm_errorsome__3vRDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__1LQ4I\",\"content\":\"MyPost_content__3ZSGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Hshl\",\"avatar\":\"Post_avatar__27ZwP\",\"block\":\"Post_block___0v4o\"};","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editeMode, setEditeMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditeMode = () => {\r\n        setEditeMode(true)\r\n    }\r\n    let deActivateEditeMode = () => {\r\n        setEditeMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let onChangeStatus = (e) => {\r\n\r\n        setStatus(e.currentTarget.value)\r\n        // debugger\r\n\r\n    }\r\n\r\n    return <div>\r\n        {!editeMode && <div>\r\n            <span onDoubleClick={activateEditeMode}>{props.status || \"++++++++\"}</span>\r\n        </div>}\r\n        {editeMode &&\r\n            <div>\r\n                <input autoFocus={true} onChange={onChangeStatus}\r\n                    onBlur={deActivateEditeMode} value={status} />\r\n            </div>\r\n\r\n        }\r\n    </div>\r\n}\r\nexport default ProfileStatusWithHook","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Input, Textarea } from '../../Common/FormsControl/FormsControl'\r\nimport s from './ProfileDataForm.module.css'\r\n\r\nconst ProfileDataForm = ({profile , ...props}) => {\r\n    return <form className={s.form} onSubmit={props.handleSubmit}>\r\n          {<div><button className={s.form__button} >Save</button></div>}\r\n        {props.error &&\r\n                <div className={s.errorsome}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n        <div className={s.form__item} >\r\n            <b>FullName:</b>\r\n            <div className={s.form__input}>\r\n                <Field name=\"fullName\" placeholder={'FullName'} component={Input} type=\"text\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div className={s.form__item}>\r\n            <b>About me:</b>\r\n            <div className={s.form__input}>\r\n                <Field name=\"aboutMe\" placeholder={'AboutMe'} component={Textarea} type=\"textarea\" />\r\n            </div>\r\n        </div>\r\n        <div className={s.form__item}>\r\n            <b>lookingForAJob:</b>\r\n            <div className={s.form__input}>\r\n                <Field name=\"lookingForAJob\" component={Input} type=\"checkbox\" />\r\n            </div>\r\n        </div>\r\n        <div className={s.form__item}>\r\n            <b>My professional skills:  </b>\r\n            <div className={s.form__input}>\r\n                <Field name=\"lookingForAJobDescription\" placeholder={'LookingForAJobDescription'} component={Textarea} type=\"textarea\" />\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.form__item && s.form__contact}><b>{key}: </b>\r\n                    <div className={s.form__input}>\r\n                        <Field name={'contacts.' + key} placeholder={key} component={Input} type=\"text\" />\r\n                    </div>\r\n                </div>\r\n\r\n            })}\r\n        </div>\r\n   \r\n\r\n      \r\n        \r\n    </form>\r\n}\r\nconst ProfileDataFormRedux = reduxForm({ form: 'profile' })(ProfileDataForm); \r\n\r\nexport default ProfileDataFormRedux","import React, { useState } from 'react'\r\nimport s from './ProfileItem.module.css'\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHook from '../ProfileStatusWithHook';\r\nimport userPhoto from '../../../Images/User.png'\r\n\r\nimport ProfileDataFormRedux from './ProfileDataForm';\r\n\r\nconst ProfileItems = (props) => {\r\n    let [editeMode, setEditeMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    let onUpdatePhoto = (e) => {\r\n        props.setPhoto(e.target.files[0])\r\n\r\n    }\r\n    let onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditeMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <img className={s.mainPhoto} src={props.profile.photos.large || userPhoto} alt='PhotoUser' />\r\n\r\n            {props.isOwner &&\r\n                <div className={'s.button__file'}>\r\n                    <button className={s.input_file}>Edit photo\r\n                        <input type={'file'} onChange={onUpdatePhoto} />\r\n                    </button>\r\n                </div>\r\n            }\r\n\r\n            <div className={s.title}>Status</div>\r\n            <div className={s.status}>\r\n                <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n            {editeMode\r\n                ? <ProfileDataFormRedux onSubmit={onSubmit} initialValues={props.profile} profile={props.profile} />\r\n                : <ProfileData goToEditForm={() => setEditeMode(true)} isOwner={props.isOwner} profile={props.profile} />\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditForm }) => {\r\n    return <div className={s.description}>\r\n        {isOwner && <div><button onClick={goToEditForm}>Edit</button></div>}\r\n        <div className={s.name}>{profile.fullName}</div>\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>lookingForAJob:</b>    {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills:  </b>  {profile.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}</b> : {contactValue}\r\n    </div>\r\n\r\n}\r\nexport default ProfileItems;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport userPhoto from '../../../../Images/User.png'\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\n\r\nconst Post = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n}\r\n  console.log('MyPost');\r\n  console.log(props.profile.photos);\r\n  return (\r\n\r\n      <div className={s.item} >\r\n\r\n        <img className={s.avatar} src={props.profile.photos.large !==null ? props.profile.photos.large :userPhoto } alt=\"\" />\r\n        <div>\r\n          {props.message}\r\n          <span>like {props.count}</span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport PostForm from './MyPostForm';\r\n\r\n\r\nconst MyPost = React.memo((props) => {\r\n\r\n  let addPost = (text) => {\r\n    props.addPost(text);\r\n  }\r\n\r\n  let postElements = props.posts.map(post => {\r\n    return <Post key={post.id} profile={props.profile} message={post.message} count={post.count} />\r\n  })\r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.item}> My posts </div>\r\n      <PostForm addMessage={addPost} namebutton={'Add'} placeholder={'Начните ввод'} />\r\n\r\n      {postElements}\r\n\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPost;","\r\nimport { addPostActionCreator} from '../../../redux/profileReduser';\r\nimport MyPost from './MyPost';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText,\r\n    profile: state.profilePage.profile\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      dispatch(addPostActionCreator(text));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","import React from 'react';\r\nimport ProfileItems from './ProfileItem/ProfileItem';\r\nimport MyPostContainer from './MyPost/MyPostContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileItems saveProfile={props.saveProfile} isOwner={props.isOwner} profile={props.profile} status={props.status} \r\n                  updateStatus={props.updateStatus} setPhoto = {props.setPhoto}/>\r\n      <MyPostContainer store={props.store} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile, getProfile, getStatus, updateStatus, setPhoto, saveProfile } from '../../redux/profileReduser';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthContainer';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Profile {...this.props} \r\n                    status={this.props.status} \r\n                    isOwner = {! this.props.match.params.userId} \r\n                    setPhoto = {this.props.setPhoto}\r\n                    saveProfile = {this.props.saveProfile}\r\n                    />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setUserProfile, getProfile, getStatus, updateStatus, setPhoto, saveProfile }),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n// const MyProfileContainer = withRouter(ProfileContainer);\r\n\r\n// let AuthRedirect = withAuthRedirect(MyProfileContainer)\r\n\r\n// export default connect(mapStateToProps, {setUserProfile, getProfile}) (AuthRedirect);\r\n\r\n"],"sourceRoot":""}